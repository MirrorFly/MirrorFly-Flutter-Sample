def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.mirrorfly.uikit.dev"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'SDK_BASE_URL', '"https://api-uikit-qa.contus.us/api/v1/"'//qa
//            buildConfigField 'String', 'SDK_BASE_URL', '"https://api-preprod-sandbox.mirrorfly.com/api/v1/"'
            buildConfigField 'String', 'LICENSE', '"ckIjaccWBoMNvxdbql8LJ2dmKqT5bp"'//qa
//            buildConfigField 'String', 'LICENSE', '"MZTquZ16EP3GfNQIrU6oq3N663Cu50"'
            buildConfigField 'String', 'WEB_CHAT_LOGIN', '"https://webchat-preprod-sandbox.mirrorfly.com/"'
            buildConfigField "String", "SUPPORT_MAIL", '"contussupport@gmail.com"'
        }
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
//            buildConfigField 'String', 'SDK_BASE_URL', '"https://api-preprod-sandbox.mirrorfly.com/api/v1/"'
            buildConfigField 'String', 'SDK_BASE_URL', '"https://api-uikit-qa.contus.us/api/v1/"'//qa
            buildConfigField 'String', 'LICENSE', '"ckIjaccWBoMNvxdbql8LJ2dmKqT5bp"'
//            buildConfigField 'String', 'LICENSE', '"MZTquZ16EP3GfNQIrU6oq3N663Cu50"'
            buildConfigField 'String', 'WEB_CHAT_LOGIN', '"https://webchat-preprod-sandbox.mirrorfly.com/"'
            buildConfigField "String", "SUPPORT_MAIL", '"contussupport@gmail.com"'
            minifyEnabled false
            shrinkResources false
        }
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
    }
}

flutter {
    source '../..'
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    configurations {
        all {
            exclude group: 'org.json', module: 'json'
            exclude group: 'xpp3', module: 'xpp3'
        }
    }

    implementation files("libs/appbase.aar")
    implementation files("libs/flycommons.aar")
    implementation files("libs/flydatabase.aar")
    implementation files("libs/flynetwork.aar")
    implementation files("libs/videocompression.aar")
    implementation files("libs/flywebrtc.aar")
    implementation files("libs/xmpp.aar")
    implementation files("libs/flywebrtc.aar")

    //For lifecycle listener
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    annotationProcessor 'android.arch.lifecycle:compiler:1.1.1'

    //For GreenDao
    implementation 'de.greenrobot:greendao:2.1.0'

    //For gson parsing
    implementation 'com.google.code.gson:gson:2.8.1'

    //for smack implementation
    implementation ('org.igniterealtime.smack:smack-android:4.4.4'){
        exclude  group:'de.measite.minidns'
    }
    implementation ('org.igniterealtime.smack:smack-tcp:4.4.4'){
        exclude  group:'de.measite.minidns'
    }
    implementation 'org.igniterealtime.smack:smack-im:4.4.4'
    implementation 'org.igniterealtime.smack:smack-extensions:4.4.4'
    implementation 'org.igniterealtime.smack:smack-sasl-provided:4.4.4'

    implementation 'org.jxmpp:jxmpp-util-cache:1.0.3'
    implementation 'org.jxmpp:jxmpp-jid:1.0.3'
    implementation 'org.jxmpp:jxmpp-core:1.0.3'
    implementation 'org.minidns:minidns-core:1.0.4'
    implementation 'org.minidns:minidns-android21:1.0.4'
    implementation 'org.minidns:minidns-hla:1.0.4'

    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    //Dagger Dependencies
    api 'com.google.dagger:dagger:2.40.5'
    kapt 'com.google.dagger:dagger-compiler:2.40.5'
    api 'com.google.dagger:dagger-android:2.40.5'
    api 'com.google.dagger:dagger-android-support:2.40.5'
    kapt 'com.google.dagger:dagger-android-processor:2.40.5'

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.8'

    //apicalls
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //stetho interceptor
    implementation 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    //okhttp interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.3'

    //shared preference encryption
    implementation 'androidx.security:security-crypto:1.1.0-alpha03'

    //room database
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation "androidx.room:room-ktx:2.2.5"
    //for mobile number formatting
    implementation 'io.michaelrocks:libphonenumber-android:8.10.1'
}

